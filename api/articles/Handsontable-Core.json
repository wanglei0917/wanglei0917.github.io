{"title":"Handsontable-Core","uid":"3d78fd11f83a61156328d53929a4b580","slug":"Handsontable-Core","date":"2022-05-09T02:54:50.000Z","updated":"2022-11-12T13:13:00.166Z","comments":true,"path":"api/articles/Handsontable-Core.json","keywords":null,"cover":"https://tvax1.sinaimg.cn/large/007YLcQ6ly1h21fw60pmdj31hc0u0wnw","content":"<h1 id=\"HandsonTable-All-Core\"><a href=\"#HandsonTable-All-Core\" class=\"headerlink\" title=\"HandsonTable All Core\"></a>HandsonTable All Core</h1><p><code>HandsonTable</code>实例上的方法, 用于获取或者设置表格</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>How to use?</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// 1.实例化表格</span>\n<span class=\"token keyword\">const</span> hot <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Handsontable</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2.使用</span>\nhot<span class=\"token punctuation\">.</span><span class=\"token function\">setDataAtCell</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'new value'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote>\n<h2 id=\"Methods\"><a href=\"#Methods\" class=\"headerlink\" title=\"Methods\"></a>Methods</h2><h3 id=\"addHook\"><a href=\"#addHook\" class=\"headerlink\" title=\"addHook\"></a>addHook</h3><p><em>core.addHook(key, callback)</em></p>\n<p>为实例添加一个指定<code>name</code>的<code>hook</code>, 以及触发的回调函数</p>\n<h3 id=\"addHookOnce\"><a href=\"#addHookOnce\" class=\"headerlink\" title=\"addHookOnce\"></a>addHookOnce</h3><p><em>core.addHookOnce(key, callback)</em></p>\n<p>为实例添加一个只会触发一次的指定<code>name</code>的<code>hook</code>, 以及触发的回调函数</p>\n<h3 id=\"alter\"><a href=\"#alter\" class=\"headerlink\" title=\"alter\"></a>alter</h3><p><em>core.alter(action, index, [amount], [source], [keepEmptyRows])</em></p>\n<p>修改表格, 但是只适用于数据结构为数组的</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Param</th>\n<th align=\"left\">Type</th>\n<th align=\"left\">Default</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">action</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\"></td>\n<td align=\"left\">可能的值<code>insert_row</code>,<code>insert_col</code>,<code>remove_row</code>,<code>remove_col</code></td>\n</tr>\n<tr>\n<td align=\"left\">index</td>\n<td align=\"left\"><code>number</code> <code>Array&lt;number&gt;</code></td>\n<td align=\"left\"></td>\n<td align=\"left\">在新行/列插入或者移除前的索引</td>\n</tr>\n<tr>\n<td align=\"left\">[amount]</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\">1</td>\n<td align=\"left\">要插入或者删除的行数或者列数</td>\n</tr>\n<tr>\n<td align=\"left\">[source]</td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\"></td>\n<td align=\"left\">来源指示器</td>\n</tr>\n<tr>\n<td align=\"left\">[keepEmptyRows]</td>\n<td align=\"left\"><code>boolean</code></td>\n<td align=\"left\"></td>\n<td align=\"left\">是否防止删除空行</td>\n</tr>\n</tbody></table>\n<h3 id=\"batch\"><a href=\"#batch\" class=\"headerlink\" title=\"batch\"></a>batch</h3><p><em>core.batch(wrappedOperations) ⇒ void</em></p>\n<p>此方法用于将多个渲染与重新计算表格的方法收集在一起, 通俗说就是将多个更新汇集成一个更新, 之后重新渲染表格</p>\n<details class=\"custom-details\">\n<summary>点击查看示例</summary>\n<p><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">hot<span class=\"token punctuation\">.</span><span class=\"token function\">batch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  hot<span class=\"token punctuation\">.</span><span class=\"token function\">alter</span><span class=\"token punctuation\">(</span><span class=\"token string\">'insert_row'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">45</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  hot<span class=\"token punctuation\">.</span><span class=\"token function\">alter</span><span class=\"token punctuation\">(</span><span class=\"token string\">'insert_col'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  hot<span class=\"token punctuation\">.</span><span class=\"token function\">setDataAtCell</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  hot<span class=\"token punctuation\">.</span><span class=\"token function\">setDataAtCell</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  hot<span class=\"token punctuation\">.</span><span class=\"token function\">setDataAtCell</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'v'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  hot<span class=\"token punctuation\">.</span><span class=\"token function\">setDataAtCell</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  hot<span class=\"token punctuation\">.</span><span class=\"token function\">setDataAtCell</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  hot<span class=\"token punctuation\">.</span><span class=\"token function\">selectCell</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> filters <span class=\"token operator\">=</span> hot<span class=\"token punctuation\">.</span><span class=\"token function\">getPlugin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'filters'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  filters<span class=\"token punctuation\">.</span><span class=\"token function\">addCondition</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'contains'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  filters<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  hot<span class=\"token punctuation\">.</span><span class=\"token function\">getPlugin</span><span class=\"token punctuation\">(</span><span class=\"token string\">'columnSorting'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span> <span class=\"token literal-property property\">column</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">sortOrder</span><span class=\"token operator\">:</span> <span class=\"token string\">'desc'</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// The table will be re-rendered and cache will be recalculated once after executing the callback</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</p>\n</details>\n<h3 id=\"batchExecution\"><a href=\"#batchExecution\" class=\"headerlink\" title=\"batchExecution\"></a>batchExecution</h3><p><em>core.batchExecution(wrappedOperations, [forceFlushChanges]) ⇒  void</em></p>\n<p>与<code>batch</code>相比不同在于不会重新渲染表格, 对于第二个参数, 如果为true, 则在执行完操作后, 会重新计算表格内部缓存</p>\n<h3 id=\"batchRender\"><a href=\"#batchRender\" class=\"headerlink\" title=\"batchRender\"></a>batchRender</h3><p><em>core.batchRender(wrappedOperations) ⇒ void</em></p>\n<p>与<code>batch</code>类似</p>\n<h3 id=\"clear\"><a href=\"#clear\" class=\"headerlink\" title=\"clear\"></a>clear</h3><p><em>core.clear()</em></p>\n<p>清楚表格数据,不会改变表格设置</p>\n<h3 id=\"clearUndo\"><a href=\"#clearUndo\" class=\"headerlink\" title=\"clearUndo\"></a>clearUndo</h3><p><em>core.clearUndo() ⇒ boolean</em></p>\n<p>清除撤销</p>\n<h3 id=\"colToProp\"><a href=\"#colToProp\" class=\"headerlink\" title=\"colToProp\"></a>colToProp</h3><p><em>core.colToProp(column) ⇒ string | number</em></p>\n<p>返回与给定列索引对应的属性名。如果数据源是数组的数组，则返回列索引</p>\n<h3 id=\"propToCol\"><a href=\"#propToCol\" class=\"headerlink\" title=\"propToCol\"></a>propToCol</h3><p><em>core.propToCol(prop) ⇒ number</em></p>\n<p>给定属性返回列索引</p>\n<h3 id=\"countCols\"><a href=\"#countCols\" class=\"headerlink\" title=\"countCols\"></a>countCols</h3><p><em>core.countCols() ⇒ number</em></p>\n<p>返回总列数</p>\n<h3 id=\"countEmptyCols\"><a href=\"#countEmptyCols\" class=\"headerlink\" title=\"countEmptyCols\"></a>countEmptyCols</h3><p><em>core.countEmptyCols([ending]) ⇒ number</em></p>\n<p>返回空列的总数, 可选参数如为<code>true</code>, 则只计算数据源末尾的空列</p>\n<h3 id=\"countEmptyRows\"><a href=\"#countEmptyRows\" class=\"headerlink\" title=\"countEmptyRows\"></a>countEmptyRows</h3><p><em>core.countEmptyRows([ending]) ⇒ number</em></p>\n<p>返回空行的总数, 可选参数如为<code>true</code>, 则只计算数据源末尾的空行</p>\n<h3 id=\"countRenderedCols\"><a href=\"#countRenderedCols\" class=\"headerlink\" title=\"countRenderedCols\"></a>countRenderedCols</h3><p><em>core.countRenderedCols() ⇒ number</em></p>\n<p>返回渲染的列数, 包括在可视区域以外的, 返回<code>-1</code>则表格不可见</p>\n<h3 id=\"countRenderedRows\"><a href=\"#countRenderedRows\" class=\"headerlink\" title=\"countRenderedRows\"></a>countRenderedRows</h3><p><em>core.countRenderedRows() ⇒ number</em></p>\n<p>返回渲染的行数, 包括在可视区域以外的, 返回<code>-1</code>则表格不可见</p>\n<h3 id=\"countRows\"><a href=\"#countRows\" class=\"headerlink\" title=\"countRows\"></a>countRows</h3><p><em>core.countRows() ⇒ number</em></p>\n<p>返回可视行的总数</p>\n<h3 id=\"countSourceCols\"><a href=\"#countSourceCols\" class=\"headerlink\" title=\"countSourceCols\"></a>countSourceCols</h3><p><em>core.countSourceCols() ⇒ number</em></p>\n<p>返回数据源中的总列数</p>\n<h3 id=\"countSourceRows\"><a href=\"#countSourceRows\" class=\"headerlink\" title=\"countSourceRows\"></a>countSourceRows</h3><p><em>core.countSourceRows() ⇒ number</em></p>\n<p>返回数据源中的总行数</p>\n<h3 id=\"countVisibleCols\"><a href=\"#countVisibleCols\" class=\"headerlink\" title=\"countVisibleCols\"></a>countVisibleCols</h3><p><em>core.countVisibleCols() ⇒ number</em></p>\n<p>返回仅在表视口中可见的呈现列数。部分可见的列不计算在内</p>\n<h3 id=\"countVisibleRows\"><a href=\"#countVisibleRows\" class=\"headerlink\" title=\"countVisibleRows\"></a>countVisibleRows</h3><p><em>core.countVisibleRows() ⇒ number</em></p>\n<p>返回仅在表视口中可见的呈现行数。部分可见的列不计算在内</p>\n<h3 id=\"deselectCell\"><a href=\"#deselectCell\" class=\"headerlink\" title=\"deselectCell\"></a>deselectCell</h3><p><em>core.deselectCell()</em></p>\n<p>取消当前选中的单元格</p>\n<h3 id=\"destroy\"><a href=\"#destroy\" class=\"headerlink\" title=\"destroy\"></a>destroy</h3><p><em>core.destroy()</em></p>\n<p>从<code>DOM</code>中移除表格并销毁<code>Handsontable</code>实例</p>\n<h3 id=\"destroyEditor\"><a href=\"#destroyEditor\" class=\"headerlink\" title=\"destroyEditor\"></a>destroyEditor</h3><p><em>core.destroyEditor([revertOriginal], [prepareEditorIfNeeded])</em></p>\n<p>销毁当前编辑器，呈现表格并准备新选定单元格的编辑器。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Param</th>\n<th align=\"left\">Type</th>\n<th align=\"left\">Default</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">[revertOriginal]</td>\n<td align=\"left\"><code>boolean</code></td>\n<td align=\"left\"><code>false</code></td>\n<td align=\"left\">如果为<code>true</code>，将恢复先前的值。否则，将保存编辑的值。</td>\n</tr>\n<tr>\n<td align=\"left\">[prepareEditorIfNeeded]</td>\n<td align=\"left\"><code>boolean</code></td>\n<td align=\"left\"><code>true</code></td>\n<td align=\"left\">如果为<code>true</code>,所选单元格下的编辑器将准备打开</td>\n</tr>\n</tbody></table>\n<h3 id=\"emptySelectedCells\"><a href=\"#emptySelectedCells\" class=\"headerlink\" title=\"emptySelectedCells\"></a>emptySelectedCells</h3><p><em>core.emptySelectedCells([source])</em></p>\n<p>擦除表格中选定单元格的内容, 可选参数类型为<code>string</code>, 在<code>afterChange</code>和<code>beforeChange</code>中可以拿到设置的<code>source</code></p>\n<h3 id=\"getActiveEditor\"><a href=\"#getActiveEditor\" class=\"headerlink\" title=\"getActiveEditor\"></a>getActiveEditor</h3><p><em>core.getActiveEditor() ⇒ BaseEditor</em></p>\n<p>返回激活的编辑器实例</p>\n<h3 id=\"getCell\"><a href=\"#getCell\" class=\"headerlink\" title=\"getCell\"></a>getCell</h3><p><em>core.getCell(row, column, [topmost]) ⇒ HTMLTableCellElement | null</em></p>\n<p>如果它渲染在屏幕上, 则返回给定行和列参数的TD元素。如果没有呈现在屏幕上，则返回null(可能是因为表的这一部分不可见)</p>\n<h3 id=\"getCellEditor\"><a href=\"#getCellEditor\" class=\"headerlink\" title=\"getCellEditor\"></a>getCellEditor</h3><p><em>core.getCellEditor(row, column) ⇒ function</em></p>\n<p>获取单元格编辑器</p>\n<h3 id=\"getCellMeta\"><a href=\"#getCellMeta\" class=\"headerlink\" title=\"getCellMeta\"></a>getCellMeta</h3><p><em>core.getCellMeta(row, column) ⇒ object</em></p>\n<p>返回单元格的属性对象</p>\n<p><code>Emits</code>: <code>Hooks#event:beforeGetCellMeta</code>, <code>Hooks#event:afterGetCellMeta</code></p>\n<h3 id=\"getCellMetaAtRow\"><a href=\"#getCellMetaAtRow\" class=\"headerlink\" title=\"getCellMetaAtRow\"></a>getCellMetaAtRow</h3><p><em>core.getCellMetaAtRow(row) ⇒ Array</em></p>\n<p>返回指定行索引的单元格元对象数组。</p>\n<h3 id=\"getCellRenderer\"><a href=\"#getCellRenderer\" class=\"headerlink\" title=\"getCellRenderer\"></a>getCellRenderer</h3><p><em>core.getCellRenderer(row, column) ⇒ function</em></p>\n<p>获取指定单元格的渲染器函数</p>\n<h3 id=\"getCellsMeta\"><a href=\"#getCellsMeta\" class=\"headerlink\" title=\"getCellsMeta\"></a>getCellsMeta</h3><p><em>core.getCellsMeta() ⇒ Array</em></p>\n<p>在表格中至少获得一次生成的所有单元格设置(按照单元初始化的顺序)。</p>\n<h3 id=\"getCellValidator\"><a href=\"#getCellValidator\" class=\"headerlink\" title=\"getCellValidator\"></a>getCellValidator</h3><p><em>core.getCellValidator(row, column) ⇒ function | RegExp | undefined</em></p>\n<p>获取指定单元格验证器</p>\n<h3 id=\"getColHeader\"><a href=\"#getColHeader\" class=\"headerlink\" title=\"getColHeader\"></a>getColHeader</h3><p><em>core.getColHeader([column]) ⇒ Array | string | number</em></p>\n<p>返回列头数组</p>\n<p><strong>Emits</strong>: <code>Hooks#event:modifyColHeader</code></p>\n<h3 id=\"getRowHeader\"><a href=\"#getRowHeader\" class=\"headerlink\" title=\"getRowHeader\"></a>getRowHeader</h3><p><em>core.getRowHeader([row]) ⇒ Array | string | number</em></p>\n<p>获取行头</p>\n<p><strong>Emits</strong>: <code>Hooks#event:modifyRowHeader</code></p>\n<h3 id=\"getColWidth\"><a href=\"#getColWidth\" class=\"headerlink\" title=\"getColWidth\"></a>getColWidth</h3><p><em>core.getColWidth(column) ⇒ number</em></p>\n<p>获取指定列宽</p>\n<p><strong>Emits</strong>: <code>Hooks#event:modifyColWidth</code></p>\n<h3 id=\"getRowHeight\"><a href=\"#getRowHeight\" class=\"headerlink\" title=\"getRowHeight\"></a>getRowHeight</h3><p><em>core.getRowHeight(row) ⇒ number</em></p>\n<p>获取指定行高</p>\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">注意</p>\n<p>注意，这个方法不同于<code>AutoRowSize</code>插件的<code>getRowHeight()</code>。</p>\n\n</div>\n<p><strong>Emits</strong>: <code>Hooks#event:modifyRowHeight</code></p>\n<h3 id=\"getCoords\"><a href=\"#getCoords\" class=\"headerlink\" title=\"getCoords\"></a>getCoords</h3><p><em>core.getCoords(element) ⇒ CellCoords | null</em></p>\n<p>返回单元格位置</p>\n<h3 id=\"getCopyableData\"><a href=\"#getCopyableData\" class=\"headerlink\" title=\"getCopyableData\"></a>getCopyableData</h3><p><em>core.getCopyableData(row, column) ⇒ string</em></p>\n<p>返回指定位置的可复制的数据</p>\n<h3 id=\"getCopyableText\"><a href=\"#getCopyableText\" class=\"headerlink\" title=\"getCopyableText\"></a>getCopyableText</h3><p><em>core.getCopyableText(startRow, startCol, endRow, endCol) ⇒ string</em></p>\n<p>返回选定范围的字符串值。每一列由制表符分隔，每一行由新的行字符分隔。</p>\n<h3 id=\"getData\"><a href=\"#getData\" class=\"headerlink\" title=\"getData\"></a>getData</h3><p><em>core.getData([row], [column], [row2], [column2]) ⇒ Array&lt;Array&gt;</em></p>\n<p>获取数据对象, 与<code>options:data</code>或者<code>loadData</code>传递的数据对象相同, 也可以指定参数获取部分区域的数据对象</p>\n<h3 id=\"getDataAtCell\"><a href=\"#getDataAtCell\" class=\"headerlink\" title=\"getDataAtCell\"></a>getDataAtCell</h3><p><em>core.getDataAtCell(row, column) ⇒ void</em></p>\n<p>返回指定单元格的值,</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p><p>如果数据发生改变(排序或者拖拽行列, 则按照当前渲染的表格索引)</p>\n</p>\n</div>\n<h3 id=\"getDataAtCol\"><a href=\"#getDataAtCol\" class=\"headerlink\" title=\"getDataAtCol\"></a>getDataAtCol</h3><p><em>core.getDataAtCol(column) ⇒ Array</em></p>\n<p>获取指定列的数据</p>\n<h3 id=\"getDataAtProp\"><a href=\"#getDataAtProp\" class=\"headerlink\" title=\"getDataAtProp\"></a>getDataAtProp</h3><p><em>core.getDataAtProp(prop) ⇒ Array</em></p>\n<p>获取指定属性的数据value</p>\n<h3 id=\"getDataAtRow\"><a href=\"#getDataAtRow\" class=\"headerlink\" title=\"getDataAtRow\"></a>getDataAtRow</h3><p><em>core.getDataAtRow(row) ⇒ Array</em></p>\n<p>获取指定行的数据</p>\n<h3 id=\"getDataAtRowProp\"><a href=\"#getDataAtRowProp\" class=\"headerlink\" title=\"getDataAtRowProp\"></a>getDataAtRowProp</h3><p><em>core.getDataAtRowProp(row, prop) ⇒ void</em></p>\n<p>获取指定行和属性的value</p>\n<h3 id=\"getDataType\"><a href=\"#getDataType\" class=\"headerlink\" title=\"getDataType\"></a>getDataType</h3><p><em>core.getDataType(rowFrom, columnFrom, rowTo, columnTo) ⇒ string</em></p>\n<p>返回在<code>option:type</code>中定义的值, 如果范围内有不同类型的值, 则返回<code>mixed</code></p>\n<h3 id=\"getDirectionFactor\"><a href=\"#getDirectionFactor\" class=\"headerlink\" title=\"getDirectionFactor\"></a>getDirectionFactor</h3><p><em>core.getDirectionFactor() ⇒ number</em></p>\n<p>为LTR返回1；-1代表RTL。对计算有用。</p>\n<h3 id=\"getInstance\"><a href=\"#getInstance\" class=\"headerlink\" title=\"getInstance\"></a>getInstance</h3><p><em>core.getInstance() ⇒ Handsontable</em></p>\n<p>返回<code>Handsontable</code>实例</p>\n<h3 id=\"getPlugin\"><a href=\"#getPlugin\" class=\"headerlink\" title=\"getPlugin\"></a>getPlugin</h3><p><em>core.getPlugin(pluginName) ⇒ BasePlugin| undefined</em></p>\n<p>获取插件</p>\n<h3 id=\"getSchema\"><a href=\"#getSchema\" class=\"headerlink\" title=\"getSchema\"></a>getSchema</h3><p><em>core.getSchema() ⇒ object</em></p>\n<p>返回由构造函数设置提供的架构。如果它不存在，那么它根据第一行中的数据结构返回模式。</p>\n<h3 id=\"getSelected\"><a href=\"#getSelected\" class=\"headerlink\" title=\"getSelected\"></a>getSelected</h3><p><em>core.getSelected() ⇒ Array&lt;Array&gt; | undefined</em></p>\n<p>获取选中的单元格位置</p>\n<h3 id=\"getSelectedLast\"><a href=\"#getSelectedLast\" class=\"headerlink\" title=\"getSelectedLast\"></a>getSelectedLast</h3><p><em>core.getSelectedLast() ⇒ Array | undefined</em></p>\n<p>获取选中的最后一个单元格坐标</p>\n<h3 id=\"getSelectedRange\"><a href=\"#getSelectedRange\" class=\"headerlink\" title=\"getSelectedRange\"></a>getSelectedRange</h3><p><em>core.getSelectedRange() ⇒ Array&lt;CellRange&gt; | undefined</em></p>\n<p>以<code>CellRange</code>对象的数组形式返回当前选定的区域</p>\n<h3 id=\"getSelectedRangeLast\"><a href=\"#getSelectedRangeLast\" class=\"headerlink\" title=\"getSelectedRangeLast\"></a>getSelectedRangeLast</h3><p><em>core.getSelectedRange() ⇒ Array&lt;CellRange&gt; | undefined</em></p>\n<p>以<code>CellRange</code>对象的数组形式返回当前选定的区域的最后一个</p>\n<h3 id=\"getSettings\"><a href=\"#getSettings\" class=\"headerlink\" title=\"getSettings\"></a>getSettings</h3><p><em>core.getSettings() ⇒ TableMeta</em></p>\n<p>获取设置对象</p>\n<h3 id=\"getShortcutManager\"><a href=\"#getShortcutManager\" class=\"headerlink\" title=\"getShortcutManager\"></a>getShortcutManager</h3><p><em>core.getShortcutManager() ⇒ ShortcutManager</em></p>\n<p>返回负责处理存储在某些上下文中的快捷方式的管理器的实例。它在激活的可触摸实例中按下组合键后运行动作。</p>\n<h3 id=\"getSourceData\"><a href=\"#getSourceData\" class=\"headerlink\" title=\"getSourceData\"></a>getSourceData</h3><p><em>core.getSourceData([row], [column], [row2], [column2]) ⇒ Array<Array> | Array<object></em></p>\n<p>获取数据源的数据</p>\n<h3 id=\"getSourceDataArray\"><a href=\"#getSourceDataArray\" class=\"headerlink\" title=\"getSourceDataArray\"></a>getSourceDataArray</h3><p><em>core.getSourceDataArray([row], [column], [row2], [column2]) ⇒ Array</em></p>\n<p>以数组对象的形式返回表格数据, 即使数据源不为数组对象</p>\n<h3 id=\"getSourceDataAtCell\"><a href=\"#getSourceDataAtCell\" class=\"headerlink\" title=\"getSourceDataAtCell\"></a>getSourceDataAtCell</h3><p><em>core.getSourceDataAtCell(row, column) ⇒ void</em></p>\n<p>从数据源返回单个值</p>\n<h3 id=\"getSourceDataAtCol\"><a href=\"#getSourceDataAtCol\" class=\"headerlink\" title=\"getSourceDataAtCol\"></a>getSourceDataAtCol</h3><p><em>core.getSourceDataAtCol(column) ⇒ Array</em></p>\n<p>从数据源返回指定列的value</p>\n<h3 id=\"getSourceDataAtRow\"><a href=\"#getSourceDataAtRow\" class=\"headerlink\" title=\"getSourceDataAtRow\"></a>getSourceDataAtRow</h3><p><em>core.getSourceDataAtRow(row) ⇒ Array | object</em></p>\n<p>返回单行数据</p>\n<h3 id=\"getTranslatedPhrase\"><a href=\"#getTranslatedPhrase\" class=\"headerlink\" title=\"getTranslatedPhrase\"></a>getTranslatedPhrase</h3><p><em>core.getTranslatedPhrase(dictionaryKey, extraArguments) ⇒ string</em></p>\n<p>获取指定字典关键字的语言短语。</p>\n<h3 id=\"getValue\"><a href=\"#getValue\" class=\"headerlink\" title=\"getValue\"></a>getValue</h3><p><em>core.getValue() ⇒ void</em></p>\n<p>从选定的单元格中获取值。</p>\n<h3 id=\"hasColHeaders\"><a href=\"#hasColHeaders\" class=\"headerlink\" title=\"hasColHeaders\"></a>hasColHeaders</h3><p><em>core.hasColHeaders() ⇒ boolean</em></p>\n<p>是否配置列头</p>\n<h3 id=\"hasRowHeaders\"><a href=\"#hasRowHeaders\" class=\"headerlink\" title=\"hasRowHeaders\"></a>hasRowHeaders</h3><p><em>core.hasRowHeaders() ⇒ boolean</em></p>\n<p>是否配置行头</p>\n<h3 id=\"hasHook\"><a href=\"#hasHook\" class=\"headerlink\" title=\"hasHook\"></a>hasHook</h3><p><em>core.hasHook(key) ⇒ boolean</em></p>\n<p>是否为<code>hook</code>添加了监听</p>\n<h3 id=\"isColumnModificationAllowed\"><a href=\"#isColumnModificationAllowed\" class=\"headerlink\" title=\"isColumnModificationAllowed\"></a>isColumnModificationAllowed</h3><p><em>core.isColumnModificationAllowed() ⇒ boolean</em></p>\n<p>检查数据格式和配置是否允许用户修改列结构</p>\n<h3 id=\"isEmptyCol\"><a href=\"#isEmptyCol\" class=\"headerlink\" title=\"isEmptyCol\"></a>isEmptyCol</h3><p><em>core.isEmptyCol(column) ⇒ boolean</em></p>\n<p>检查由列参数声明的列中的所有单元格是否都为空。</p>\n<h3 id=\"isEmptyRow\"><a href=\"#isEmptyRow\" class=\"headerlink\" title=\"isEmptyRow\"></a>isEmptyRow</h3><p><em>core.isEmptyRow(row) ⇒ boolean</em></p>\n<p>检查行中的单元格是否都为空</p>\n<h3 id=\"isExecutionSuspended\"><a href=\"#isExecutionSuspended\" class=\"headerlink\" title=\"isExecutionSuspended\"></a>isExecutionSuspended</h3><p><em>core.isExecutionSuspended() ⇒ boolean</em></p>\n<p>检查表索引重新计算过程是否已暂停</p>\n<h3 id=\"isListening\"><a href=\"#isListening\" class=\"headerlink\" title=\"isListening\"></a>isListening</h3><p><em>core.isListening() ⇒ boolean</em></p>\n<p>如果当前<code>Handsontable</code>实例正在监听文档正文上的键盘输入，则返回<code>true</code>。</p>\n<h3 id=\"isLtr\"><a href=\"#isLtr\" class=\"headerlink\" title=\"isLtr\"></a>isLtr</h3><p><em>core.isLtr() ⇒ boolean</em></p>\n<p>当前表格布局是否是由左向右</p>\n<h3 id=\"isRtl\"><a href=\"#isRtl\" class=\"headerlink\" title=\"isRtl\"></a>isRtl</h3><p><em>core.isRtl() ⇒ boolean</em></p>\n<p>但当前表格布局是否由右向左</p>\n<h3 id=\"isRedoAvailable\"><a href=\"#isRedoAvailable\" class=\"headerlink\" title=\"isRedoAvailable\"></a>isRedoAvailable</h3><p><em>core.isRedoAvailable() ⇒ boolean</em></p>\n<p>恢复操作是否可用</p>\n<h3 id=\"isUndoAvailable\"><a href=\"#isUndoAvailable\" class=\"headerlink\" title=\"isUndoAvailable\"></a>isUndoAvailable</h3><p><em>core.isUndoAvailable() ⇒ boolean</em></p>\n<p>撤销操作是否可用</p>\n<h3 id=\"isRenderSuspended\"><a href=\"#isRenderSuspended\" class=\"headerlink\" title=\"isRenderSuspended\"></a>isRenderSuspended</h3><p><em>core.isRenderSuspended() ⇒ boolean</em></p>\n<p>检查表格渲染过程是否暂停</p>\n<h3 id=\"listen\"><a href=\"#listen\" class=\"headerlink\" title=\"listen\"></a>listen</h3><p><em>core.listen()</em></p>\n<p>监听表格上的键盘输入</p>\n<p><strong>Emits</strong>: <code>Hooks#event:afterListen</code></p>\n<h3 id=\"unlisten\"><a href=\"#unlisten\" class=\"headerlink\" title=\"unlisten\"></a>unlisten</h3><p><em>core.unlisten()</em></p>\n<p>停止监听表格上的键盘输入</p>\n<h3 id=\"loadData\"><a href=\"#loadData\" class=\"headerlink\" title=\"loadData\"></a>loadData</h3><p><em>core.loadData(data, [source])</em></p>\n<p>加载数据</p>\n<h3 id=\"updateData\"><a href=\"#updateData\" class=\"headerlink\" title=\"updateData\"></a>updateData</h3><p><em>core.updateData(data, [source])</em></p>\n<p><strong>Emits</strong>: <code>Hooks#event:beforeUpdateData</code>, <code>Hooks#event:afterUpdateData</code>, <code>Hooks#event:afterChange</code></p>\n<h3 id=\"updateSettings\"><a href=\"#updateSettings\" class=\"headerlink\" title=\"updateSettings\"></a>updateSettings</h3><p><em>core.updateSettings(settings, [init])</em></p>\n<p><strong>Emits</strong>: <code>Hooks#event:afterCellMetaReset</code>, <code>Hooks#event:afterUpdateSettings</code></p>\n<p>更新配置</p>\n<div class=\"custom-quote tip\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12.01 15C12.01 14.5 12.01 14.5 12.01 14.5C12.04 13.75 13 13.46 14.04 12.2C14.41 11.74 14.69 11.41 14.86 10.85C15.15 9.95 14.92 9.18 14.86 9.02C14.8 8.79 14.52 8 13.72 7.46C13.06 7.02 12.42 7 12.14 7C11.9 7 11.36 7 10.78 7.3C10.28 7.56 9.98 7.9 9.83 8.1C9.24 8.82 9.06 9.63 9 10.06\"></path>\n<path stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M11.99 18H12.01\"></path>\n</svg></span>\n<p class=\"custom-quote-title\">提示</p>\n<p>如果您需要在初始化后更改配置，请使用它。settings参数是一个包含已更改设置的对象，其声明方式与初始settings对象相同。 请注意，尽管updateSettings方法不会覆盖以前声明的设置，但它可能会重置初始化后进行的设置。(例如，忽略使用<code>columnResize</code>特性所做的更改)。 由于8.0.0在设置对象内传递列或数据将导致重置对应于行和列的状态(例如，行/列顺序、列宽、行高、冻结列等。). 从12.0.0开始，在设置对象内部传递数据不再导致重置对应于行和列的状态(例如，行/列顺序、列宽、行高、冻结列等)。).</p>\n\n</div>\n<h3 id=\"populateFromArray\"><a href=\"#populateFromArray\" class=\"headerlink\" title=\"populateFromArray\"></a>populateFromArray</h3><p><em>core.populateFromArray(row, column, input, [endRow], [endCol], [source], [method], direction, deltas) ⇒ object | undefined</em></p>\n<p>用二维数组填充指定的单元格</p>\n<h3 id=\"redo\"><a href=\"#redo\" class=\"headerlink\" title=\"redo\"></a>redo</h3><p><em>core.redo() ⇒ boolean</em></p>\n<p>恢复操作</p>\n<h3 id=\"undo\"><a href=\"#undo\" class=\"headerlink\" title=\"undo\"></a>undo</h3><p><em>core.undo() ⇒ boolean</em></p>\n<p>撤销操作</p>\n<h3 id=\"refreshDimensions\"><a href=\"#refreshDimensions\" class=\"headerlink\" title=\"refreshDimensions\"></a>refreshDimensions</h3><p><em>core.refreshDimensions()</em></p>\n<p>更新表格的尺寸。该方法将以前的维度与当前的维度进行比较，并相应地进行更新。</p>\n<p><strong>Emits</strong>: <code>Hooks#event:beforeRefreshDimensions</code>, <code>Hooks#event:afterRefreshDimensions</code></p>\n<h3 id=\"removeCellMeta\"><a href=\"#removeCellMeta\" class=\"headerlink\" title=\"removeCellMeta\"></a>removeCellMeta</h3><p><em>core.removeCellMeta(row, column, key)</em></p>\n<p>针对所提供的行和列坐标，从单元格元对象中移除由key参数定义的属性。</p>\n<p><strong>Emits</strong>: <code>Hooks#event:beforeRemoveCellMeta</code>, <code>Hooks#event:afterRemoveCellMeta</code></p>\n<h3 id=\"removeHook\"><a href=\"#removeHook\" class=\"headerlink\" title=\"removeHook\"></a>removeHook</h3><p><em>core.removeHook(key, callback)</em></p>\n<p>移除添加的<code>hook</code>监听</p>\n<h3 id=\"render\"><a href=\"#render\" class=\"headerlink\" title=\"render\"></a>render</h3><p><em>core.render()</em></p>\n<p>重新渲染表格。调用此方法将启动重新计算、重绘和应用对DOM的更改的过程。渲染表格时，所有单元渲染器都会被调用。 不建议手动调用此方法。<code>Handsontable</code>会在其生命周期中的最佳时刻来渲染</p>\n<h3 id=\"resumeExecution\"><a href=\"#resumeExecution\" class=\"headerlink\" title=\"resumeExecution\"></a>resumeExecution</h3><p><em>core.resumeExecution([forceFlushChanges])</em></p>\n<p>恢复执行过程。结合<code>Core#suspendExecution</code>方法，它允许聚合表逻辑更改，然后更新缓存。恢复状态会自动调用表缓存更新过程。 该方法旨在供高级用户使用。暂停执行进程可能会导致由于未更新内部表缓存而导致的渲染出错。</p>\n<h3 id=\"suspendExecution\"><a href=\"#suspendExecution\" class=\"headerlink\" title=\"suspendExecution\"></a>suspendExecution</h3><p><em>core.suspendExecution()</em></p>\n<p>暂停执行过程.</p>\n<h3 id=\"resumeRender\"><a href=\"#resumeRender\" class=\"headerlink\" title=\"resumeRender\"></a>resumeRender</h3><p><em>core.resumeRender()</em></p>\n<p>继续渲染过程。与<code>Core#suspendRender</code>方法相结合，它允许聚合由API调用或UI操作(或两者)触发的表格呈现周期，并在最后调用一次<code>Render</code>。当表处于挂起状态时，在呈现状态恢复之前，大多数操作都没有视觉效果。恢复状态会自动调用表格呈现。 该方法旨在供高级用户使用。如果执行不当，暂停渲染过程可能会导致渲染错误。</p>\n<h3 id=\"suspendRender\"><a href=\"#suspendRender\" class=\"headerlink\" title=\"suspendRender\"></a>suspendRender</h3><p><em>core.suspendRender()</em></p>\n<p>暂停渲染过程</p>\n<h3 id=\"runHooks\"><a href=\"#runHooks\" class=\"headerlink\" title=\"runHooks\"></a>runHooks</h3><p><em>core.runHooks(key, [p1], [p2], [p3], [p4], [p5], [p6]) ⇒ void</em></p>\n<p>使用其他参数中给定的参数，为key参数中提供的<code>hook</code>运行回调。</p>\n<h3 id=\"scrollViewportTo\"><a href=\"#scrollViewportTo\" class=\"headerlink\" title=\"scrollViewportTo\"></a>scrollViewportTo</h3><p><em>core.scrollViewportTo([row], [column], [snapToBottom], [snapToRight], [considerHiddenIndexes]) ⇒ boolean</em></p>\n<p>将滚动条滚动至参数指定位置</p>\n<h3 id=\"selectAll\"><a href=\"#selectAll\" class=\"headerlink\" title=\"selectAll\"></a>selectAll</h3><p><em>core.selectAll([includeHeaders])</em></p>\n<p>选择整个表格</p>\n<h3 id=\"selectCell\"><a href=\"#selectCell\" class=\"headerlink\" title=\"selectCell\"></a>selectCell</h3><p><em>core.selectCell(row, column, [endRow], [endColumn], [scrollToCell], [changeListener]) ⇒ boolean</em></p>\n<p>选中指定的范围。如果表被配置为支持数据列属性，则可以使用该属性进行选择。 默认情况下，窗口将滚动到选择。<code>selectCell</code>方法完成后，该实例将监听文档上的键盘输入。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Param</th>\n<th align=\"left\">Type</th>\n<th align=\"left\">Default</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">row</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\"></td>\n<td align=\"left\">行索引</td>\n</tr>\n<tr>\n<td align=\"left\">column</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">[endRow]</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\"></td>\n<td align=\"left\">结束行索引</td>\n</tr>\n<tr>\n<td align=\"left\">[endColumn]</td>\n<td align=\"left\"><code>number</code></td>\n<td align=\"left\"><code>string</code></td>\n<td align=\"left\"></td>\n</tr>\n<tr>\n<td align=\"left\">[scrollToCell]</td>\n<td align=\"left\"><code>boolean</code></td>\n<td align=\"left\"><code>true</code></td>\n<td align=\"left\">是否将窗口滚动至选中的范围</td>\n</tr>\n<tr>\n<td align=\"left\">[changeListener]</td>\n<td align=\"left\"><code>boolean</code></td>\n<td align=\"left\"><code>true</code></td>\n<td align=\"left\">滚动完成后是否监听文档上的键盘输入</td>\n</tr>\n</tbody></table>\n<details class=\"custom-details\">\n<summary>点击查看示例</summary>\n<p><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// select a single cell</span>\nhot<span class=\"token punctuation\">.</span><span class=\"token function\">selectCell</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// select a single cell using column property</span>\nhot<span class=\"token punctuation\">.</span><span class=\"token function\">selectCell</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'address'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// select a range of cells</span>\nhot<span class=\"token punctuation\">.</span><span class=\"token function\">selectCell</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// select a range of cells using column properties</span>\nhot<span class=\"token punctuation\">.</span><span class=\"token function\">selectCell</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'address'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'phone_number'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// select a range of cells without scrolling to them</span>\nhot<span class=\"token punctuation\">.</span><span class=\"token function\">selectCell</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'address'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'phone_number'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</p>\n</details>\n<h3 id=\"selectCells\"><a href=\"#selectCells\" class=\"headerlink\" title=\"selectCells\"></a>selectCells</h3><p><em>core.selectCells(coords, [scrollToCell], [changeListener]) ⇒ boolean</em></p>\n<p>进行由行和列值或以endRow、endColumn结束的单元格范围指定的多个不连续的选择。该方法支持两种输入格式，这两种格式与getSelected和getSelectedRange方法生成的格式相同</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Param</th>\n<th align=\"left\">Type</th>\n<th align=\"left\">Default</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">coords</td>\n<td align=\"left\"><code>Array&lt;Array&gt;</code> <code>Array&lt;CellRange&gt;</code></td>\n<td align=\"left\"></td>\n<td align=\"left\">选中单元格的位置</td>\n</tr>\n<tr>\n<td align=\"left\">[scrollToCell]</td>\n<td align=\"left\"><code>boolean</code></td>\n<td align=\"left\"><code>true</code></td>\n<td align=\"left\">同<code>selectCell</code></td>\n</tr>\n<tr>\n<td align=\"left\">[changeListener]</td>\n<td align=\"left\"><code>boolean</code></td>\n<td align=\"left\"><code>true</code></td>\n<td align=\"left\">同<code>selectCell</code></td>\n</tr>\n</tbody></table>\n<details class=\"custom-details\">\n<summary>点击查看示例</summary>\n<p><pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\"><span class=\"token comment\">// Using an array of arrays.</span>\nhot<span class=\"token punctuation\">.</span><span class=\"token function\">selectCells</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Using an array of arrays with defined columns as props.</span>\nhot<span class=\"token punctuation\">.</span><span class=\"token function\">selectCells</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'first_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'full_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'last_name'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'first_name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Using an array of CellRange objects (produced by `.getSelectedRange()` method).</span>\n<span class=\"token keyword\">const</span> selected <span class=\"token operator\">=</span> hot<span class=\"token punctuation\">.</span><span class=\"token function\">getSelectedRange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nselected<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>from<span class=\"token punctuation\">.</span>row <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\nselected<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>from<span class=\"token punctuation\">.</span>col <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\nhot<span class=\"token punctuation\">.</span><span class=\"token function\">selectCells</span><span class=\"token punctuation\">(</span>selected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</p>\n</details>\n<h3 id=\"selectColumns\"><a href=\"#selectColumns\" class=\"headerlink\" title=\"selectColumns\"></a>selectColumns</h3><p><em>core.selectColumns(startColumn, [endColumn]) ⇒ boolean</em></p>\n<p>选中指定的列</p>\n<h3 id=\"selectRows\"><a href=\"#selectRows\" class=\"headerlink\" title=\"selectRows\"></a>selectRows</h3><p><em>core.selectRows(startRow, [endRow]) ⇒ boolean</em></p>\n<p>选中指定的行</p>\n<h3 id=\"setCellMeta\"><a href=\"#setCellMeta\" class=\"headerlink\" title=\"setCellMeta\"></a>setCellMeta</h3><p><em>core.setCellMeta(row, column, key, value)</em></p>\n<p>将<code>key</code>属性定义的属性设置为行和列对应的单元格的<code>meta</code>对象。</p>\n<p><strong>Emits</strong>: <code>Hooks#event:beforeSetCellMeta</code>, <code>Hooks#event:afterSetCellMeta</code></p>\n<h3 id=\"setCellMetaObject\"><a href=\"#setCellMetaObject\" class=\"headerlink\" title=\"setCellMetaObject\"></a>setCellMetaObject</h3><p><em>core.setCellMetaObject(row, column, prop)</em></p>\n<p>将由<code>prop</code>定义的单元元数据对象设置为相应的行和列。</p>\n<h3 id=\"setDataAtCell\"><a href=\"#setDataAtCell\" class=\"headerlink\" title=\"setDataAtCell\"></a>setDataAtCell</h3><p><em>core.setDataAtCell(row, [column], [value], [source])</em></p>\n<p>为单元格设置新值, 如设置多个值, 参数格式为<code>[[row, col, val], ... ]</code></p>\n<h3 id=\"setDataAtRowProp\"><a href=\"#setDataAtRowProp\" class=\"headerlink\" title=\"setDataAtRowProp\"></a>setDataAtRowProp</h3><p><em>core.setDataAtRowProp(row, prop, value, [source])</em></p>\n<p>为单元格设置新值, 如设置多个值, 参数格式为<code>[[row, prop, val], ... ]</code></p>\n<h3 id=\"setSourceDataAtCell\"><a href=\"#setSourceDataAtCell\" class=\"headerlink\" title=\"setSourceDataAtCell\"></a>setSourceDataAtCell</h3><p><em>core.setSourceDataAtCell(row, column, value, [source])</em></p>\n<p>设置数据源的值</p>\n<h3 id=\"spliceCellsMeta\"><a href=\"#spliceCellsMeta\" class=\"headerlink\" title=\"spliceCellsMeta\"></a>spliceCellsMeta</h3><p><em>core.spliceCellsMeta(visualIndex, [deleteAmount], […cellMetaRows])</em></p>\n<p>向单元格集合中移除或添加一行或多行单元元对象。</p>\n<h3 id=\"spliceCol\"><a href=\"#spliceCol\" class=\"headerlink\" title=\"spliceCol\"></a>spliceCol</h3><p><em>core.spliceCol(column, index, amount, […elements]) ⇒ Array</em></p>\n<p>在列中添加或者移除数据</p>\n<h3 id=\"spliceRow\"><a href=\"#spliceRow\" class=\"headerlink\" title=\"spliceRow\"></a>spliceRow</h3><p><em>core.spliceRow(row, index, amount, […elements]) ⇒ Array</em></p>\n<p>在行中添加或者移除数据</p>\n<h3 id=\"toHTML\"><a href=\"#toHTML\" class=\"headerlink\" title=\"toHTML\"></a>toHTML</h3><p><em>core.toHTML() ⇒ string</em></p>\n<p>将实例转换为HTMLTableElement的outerHTML。</p>\n<h3 id=\"toPhysicalColumn\"><a href=\"#toPhysicalColumn\" class=\"headerlink\" title=\"toPhysicalColumn\"></a>toPhysicalColumn</h3><p><em>core.toPhysicalColumn(column) ⇒ number</em></p>\n<p>将可视列索引转换为真实列索引。 当您希望基于可以重新排序、移动或修剪的可视索引来检索真实列索引时，此方法非常有用。</p>\n<h3 id=\"toPhysicalRow\"><a href=\"#toPhysicalRow\" class=\"headerlink\" title=\"toPhysicalRow\"></a>toPhysicalRow</h3><p><em>core.toPhysicalRow(row) ⇒ number</em></p>\n<p>同上</p>\n<h3 id=\"toVisualColumn\"><a href=\"#toVisualColumn\" class=\"headerlink\" title=\"toVisualColumn\"></a>toVisualColumn</h3><p><em>core.toVisualColumn(column) ⇒ number</em></p>\n<p>与<code>toPhysicalColumn</code>相反</p>\n<h3 id=\"toVisualRow\"><a href=\"#toVisualRow\" class=\"headerlink\" title=\"toVisualRow\"></a>toVisualRow</h3><p><em>core.toVisualRow(row) ⇒ number</em></p>\n<p>与<code>toPhysicalRow</code>相反</p>\n<h3 id=\"toTableElement\"><a href=\"#toTableElement\" class=\"headerlink\" title=\"toTableElement\"></a>toTableElement</h3><p><em>core.toTableElement() ⇒ HTMLTableElement</em></p>\n<p>将实例转换为HTMLTableElement。</p>\n<h3 id=\"validateCell\"><a href=\"#validateCell\" class=\"headerlink\" title=\"validateCell\"></a>validateCell</h3><p><em>core.validateCell(value, cellProperties, callback, source)</em></p>\n<p>验证单个单元格</p>\n<h3 id=\"validateCells\"><a href=\"#validateCells\" class=\"headerlink\" title=\"validateCells\"></a>validateCells</h3><p><em>core.validateCells([callback])</em></p>\n<p>使用验证器函数验证所有单元格，并在完成时调用回调。 如果其中一个单元格验证失败，回调将使用<code>valid</code>参数作为<code>false</code>来触发——否则它将等于<code>true</code>。</p>\n<pre class=\"line-numbers language-js\" data-language=\"js\"><code class=\"language-js\">hot<span class=\"token punctuation\">.</span><span class=\"token function\">validateCells</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">valid</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>valid<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// ... code for validated cells</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"validateColumns\"><a href=\"#validateColumns\" class=\"headerlink\" title=\"validateColumns\"></a>validateColumns</h3><p><em>core.validateColumns([columns], [callback])</em></p>\n<p>同上, 验证列</p>\n<h3 id=\"validateRows\"><a href=\"#validateRows\" class=\"headerlink\" title=\"validateRows\"></a>validateRows</h3><p><em>core.validateRows([rows], [callback])</em></p>\n<p>同上, 验证行</p>\n<hr>\n<p>如有错误请指出, 蟹蟹</p>\n","text":"HandsonTable All CoreHandsonTable实例上的方法, 用于获取或者设置表格 How to use? // 1.实例化表格 const hot = new Handsontable(document.getElementById('example'), ...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[],"tags":[{"name":"Handsontable","slug":"Handsontable","count":4,"path":"api/tags/Handsontable.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#HandsonTable-All-Core\"><span class=\"toc-text\">HandsonTable All Core</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Methods\"><span class=\"toc-text\">Methods</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#addHook\"><span class=\"toc-text\">addHook</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#addHookOnce\"><span class=\"toc-text\">addHookOnce</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#alter\"><span class=\"toc-text\">alter</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#batch\"><span class=\"toc-text\">batch</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#batchExecution\"><span class=\"toc-text\">batchExecution</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#batchRender\"><span class=\"toc-text\">batchRender</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#clear\"><span class=\"toc-text\">clear</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#clearUndo\"><span class=\"toc-text\">clearUndo</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#colToProp\"><span class=\"toc-text\">colToProp</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#propToCol\"><span class=\"toc-text\">propToCol</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#countCols\"><span class=\"toc-text\">countCols</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#countEmptyCols\"><span class=\"toc-text\">countEmptyCols</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#countEmptyRows\"><span class=\"toc-text\">countEmptyRows</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#countRenderedCols\"><span class=\"toc-text\">countRenderedCols</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#countRenderedRows\"><span class=\"toc-text\">countRenderedRows</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#countRows\"><span class=\"toc-text\">countRows</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#countSourceCols\"><span class=\"toc-text\">countSourceCols</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#countSourceRows\"><span class=\"toc-text\">countSourceRows</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#countVisibleCols\"><span class=\"toc-text\">countVisibleCols</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#countVisibleRows\"><span class=\"toc-text\">countVisibleRows</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#deselectCell\"><span class=\"toc-text\">deselectCell</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#destroy\"><span class=\"toc-text\">destroy</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#destroyEditor\"><span class=\"toc-text\">destroyEditor</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#emptySelectedCells\"><span class=\"toc-text\">emptySelectedCells</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getActiveEditor\"><span class=\"toc-text\">getActiveEditor</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getCell\"><span class=\"toc-text\">getCell</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getCellEditor\"><span class=\"toc-text\">getCellEditor</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getCellMeta\"><span class=\"toc-text\">getCellMeta</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getCellMetaAtRow\"><span class=\"toc-text\">getCellMetaAtRow</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getCellRenderer\"><span class=\"toc-text\">getCellRenderer</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getCellsMeta\"><span class=\"toc-text\">getCellsMeta</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getCellValidator\"><span class=\"toc-text\">getCellValidator</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getColHeader\"><span class=\"toc-text\">getColHeader</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getRowHeader\"><span class=\"toc-text\">getRowHeader</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getColWidth\"><span class=\"toc-text\">getColWidth</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getRowHeight\"><span class=\"toc-text\">getRowHeight</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getCoords\"><span class=\"toc-text\">getCoords</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getCopyableData\"><span class=\"toc-text\">getCopyableData</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getCopyableText\"><span class=\"toc-text\">getCopyableText</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getData\"><span class=\"toc-text\">getData</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getDataAtCell\"><span class=\"toc-text\">getDataAtCell</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getDataAtCol\"><span class=\"toc-text\">getDataAtCol</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getDataAtProp\"><span class=\"toc-text\">getDataAtProp</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getDataAtRow\"><span class=\"toc-text\">getDataAtRow</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getDataAtRowProp\"><span class=\"toc-text\">getDataAtRowProp</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getDataType\"><span class=\"toc-text\">getDataType</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getDirectionFactor\"><span class=\"toc-text\">getDirectionFactor</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getInstance\"><span class=\"toc-text\">getInstance</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getPlugin\"><span class=\"toc-text\">getPlugin</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getSchema\"><span class=\"toc-text\">getSchema</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getSelected\"><span class=\"toc-text\">getSelected</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getSelectedLast\"><span class=\"toc-text\">getSelectedLast</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getSelectedRange\"><span class=\"toc-text\">getSelectedRange</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getSelectedRangeLast\"><span class=\"toc-text\">getSelectedRangeLast</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getSettings\"><span class=\"toc-text\">getSettings</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getShortcutManager\"><span class=\"toc-text\">getShortcutManager</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getSourceData\"><span class=\"toc-text\">getSourceData</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getSourceDataArray\"><span class=\"toc-text\">getSourceDataArray</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getSourceDataAtCell\"><span class=\"toc-text\">getSourceDataAtCell</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getSourceDataAtCol\"><span class=\"toc-text\">getSourceDataAtCol</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getSourceDataAtRow\"><span class=\"toc-text\">getSourceDataAtRow</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getTranslatedPhrase\"><span class=\"toc-text\">getTranslatedPhrase</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getValue\"><span class=\"toc-text\">getValue</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#hasColHeaders\"><span class=\"toc-text\">hasColHeaders</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#hasRowHeaders\"><span class=\"toc-text\">hasRowHeaders</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#hasHook\"><span class=\"toc-text\">hasHook</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#isColumnModificationAllowed\"><span class=\"toc-text\">isColumnModificationAllowed</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#isEmptyCol\"><span class=\"toc-text\">isEmptyCol</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#isEmptyRow\"><span class=\"toc-text\">isEmptyRow</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#isExecutionSuspended\"><span class=\"toc-text\">isExecutionSuspended</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#isListening\"><span class=\"toc-text\">isListening</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#isLtr\"><span class=\"toc-text\">isLtr</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#isRtl\"><span class=\"toc-text\">isRtl</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#isRedoAvailable\"><span class=\"toc-text\">isRedoAvailable</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#isUndoAvailable\"><span class=\"toc-text\">isUndoAvailable</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#isRenderSuspended\"><span class=\"toc-text\">isRenderSuspended</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#listen\"><span class=\"toc-text\">listen</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#unlisten\"><span class=\"toc-text\">unlisten</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#loadData\"><span class=\"toc-text\">loadData</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#updateData\"><span class=\"toc-text\">updateData</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#updateSettings\"><span class=\"toc-text\">updateSettings</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#populateFromArray\"><span class=\"toc-text\">populateFromArray</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#redo\"><span class=\"toc-text\">redo</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#undo\"><span class=\"toc-text\">undo</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#refreshDimensions\"><span class=\"toc-text\">refreshDimensions</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#removeCellMeta\"><span class=\"toc-text\">removeCellMeta</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#removeHook\"><span class=\"toc-text\">removeHook</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#render\"><span class=\"toc-text\">render</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#resumeExecution\"><span class=\"toc-text\">resumeExecution</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#suspendExecution\"><span class=\"toc-text\">suspendExecution</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#resumeRender\"><span class=\"toc-text\">resumeRender</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#suspendRender\"><span class=\"toc-text\">suspendRender</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#runHooks\"><span class=\"toc-text\">runHooks</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#scrollViewportTo\"><span class=\"toc-text\">scrollViewportTo</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#selectAll\"><span class=\"toc-text\">selectAll</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#selectCell\"><span class=\"toc-text\">selectCell</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#selectCells\"><span class=\"toc-text\">selectCells</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#selectColumns\"><span class=\"toc-text\">selectColumns</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#selectRows\"><span class=\"toc-text\">selectRows</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#setCellMeta\"><span class=\"toc-text\">setCellMeta</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#setCellMetaObject\"><span class=\"toc-text\">setCellMetaObject</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#setDataAtCell\"><span class=\"toc-text\">setDataAtCell</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#setDataAtRowProp\"><span class=\"toc-text\">setDataAtRowProp</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#setSourceDataAtCell\"><span class=\"toc-text\">setSourceDataAtCell</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#spliceCellsMeta\"><span class=\"toc-text\">spliceCellsMeta</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#spliceCol\"><span class=\"toc-text\">spliceCol</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#spliceRow\"><span class=\"toc-text\">spliceRow</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#toHTML\"><span class=\"toc-text\">toHTML</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#toPhysicalColumn\"><span class=\"toc-text\">toPhysicalColumn</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#toPhysicalRow\"><span class=\"toc-text\">toPhysicalRow</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#toVisualColumn\"><span class=\"toc-text\">toVisualColumn</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#toVisualRow\"><span class=\"toc-text\">toVisualRow</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#toTableElement\"><span class=\"toc-text\">toTableElement</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#validateCell\"><span class=\"toc-text\">validateCell</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#validateCells\"><span class=\"toc-text\">validateCells</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#validateColumns\"><span class=\"toc-text\">validateColumns</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#validateRows\"><span class=\"toc-text\">validateRows</span></a></li></ol></li></ol></li></ol>","author":{"name":"王磊磊","slug":"blog-author","avatar":"https://static.xiongmaoyaoyao.com/INVOICE_LICENSE/2022/04/02/16488841216097075.jpg","link":"/","description":"有志青年","socials":{"github":"https://github.com/wanglei0917","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/2964740306392392","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/189716101"}}}},"mapped":true,"prev_post":{"title":"HandsonTable-Plugin-UndoRedo","uid":"f74174ce65914f55b350a7c7cd07baeb","slug":"HandsonTable-Plugin-UndoRedo","date":"2022-05-13T02:27:56.000Z","updated":"2022-11-12T13:13:00.166Z","comments":true,"path":"api/articles/HandsonTable-Plugin-UndoRedo.json","keywords":null,"cover":"https://www4.bing.com//th?id=OHR.GreatRidge_ZH-CN6165605288_1920x1080.jpg&rf=LaDigue_1920x1080.jpg&pid=hp&","text":"HandsonTable Plugin UndoRedo撤销恢复插件 optionsundooption.undo : boolean 默认: undefined 开启关闭插件 MethodsclearundoRedo.clear() 清楚撤销恢复历史记录 destroyundo...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"HandsonTable","slug":"HandsonTable","count":2,"path":"api/tags/HandsonTable.json"}],"author":{"name":"王磊磊","slug":"blog-author","avatar":"https://static.xiongmaoyaoyao.com/INVOICE_LICENSE/2022/04/02/16488841216097075.jpg","link":"/","description":"有志青年","socials":{"github":"https://github.com/wanglei0917","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/2964740306392392","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/189716101"}}}}},"next_post":{"title":"Handsontbale-Option","uid":"a9cb558acbb9cfef653d8b10d6ae449f","slug":"Handsontbale-Option","date":"2022-04-25T06:52:01.000Z","updated":"2022-11-12T13:13:00.166Z","comments":true,"path":"api/articles/Handsontbale-Option.json","keywords":null,"cover":"https://cdn-ali-img-shstaticbz.shanhutech.cn/bizhi/staticwp/202111/3cffed3d35fc6502d210dbe7a3ed3c85--1904718730.jpg","text":"Handsontable All OptionsMembersactiveHeaderClassNameoptions.activeHeaderClassName : string 选中一行或者一列, 行头或者列头添加的css类名 默认: ht__active_highlight...","link":"","photos":[],"count_time":{"symbolsCount":"23k","symbolsTime":"21 mins."},"categories":[],"tags":[{"name":"Handsontable","slug":"Handsontable","count":4,"path":"api/tags/Handsontable.json"}],"author":{"name":"王磊磊","slug":"blog-author","avatar":"https://static.xiongmaoyaoyao.com/INVOICE_LICENSE/2022/04/02/16488841216097075.jpg","link":"/","description":"有志青年","socials":{"github":"https://github.com/wanglei0917","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/2964740306392392","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/189716101"}}}}}}